[{"title":"Idea 使用 Maven 搭建 Web 项目","date":"2017-03-28T07:31:01.000Z","path":"2017/03/28/Idea 使用 Maven 搭建 Web 项目/","text":"Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。 使用它来搭建项目可以省去很多操作，它不仅有依赖管理、自动生成项目站点等超酷的特性， 还可以让你从琐碎的手工劳动中解脱出来，帮你规范整个组织的构建系统。（可以通过《Maven 实战》一书进行详细学习） 搭建Web工程步骤： File-&gt;new-&gt;Project 选择 Maven 创建一个简单的 Web工程 输入 GroupId 与 ArtifactId 用来唯一标识你的项目 添加一个变量,目的是为了让 Idea 创建 Maven 项目更快 输入项目名称完成创建，并得到如下的目录 此时还并不算创建完毕，虽然添加服务器后可以运行，但还需要做一些简单的修饰 Ctrl+Alt+Shift+s 打开 Project Structure ，添加文件夹，并设置相应的功能模块 main目录下添加一个 java 文件夹，设置为 Sources src 目录下添加一个 test 文件夹,用于存放测试相关文件 test 目录下添加一个 java 文件夹，设置为 Tests test 目录下添加一个 resources 文件夹，设置为 Test Resources 添加 Tomcat服务器 点击上面的按钮，Edit Configurations... 点击 + 添加本地服务器 发布当前的项目 至此，Web 项目搭建完毕，就可以疯狂撸代码了，请开始你的表演~","tags":[{"name":"小技巧","slug":"小技巧","permalink":"http://yoursite.com/tags/小技巧/"}]},{"title":"Hanoi(汉诺塔)————Java小算法","date":"2017-03-15T06:43:00.000Z","path":"2017/03/15/汉诺塔(Hanoi)——小小算法/","text":"汉诺(Hanoi)塔源于古印度,是非常著名的智力趣题,大意如下： 勃拉玛是古印度的一个开天辟地的神，其在一个庙宇中留下了三根金刚石的棒，第一 根上面套着64个大小不一的圆形金片。其中，最大的金片在最底下，其余的依次叠上 去，且一个比一个小。勃拉玛要求众僧将该金刚石棒中的金片逐个地移动到另一根棒 上，规定： 一次只能移动一个金片，且金片在放到棒上时，只能大的放在小的下面，但是可以利用中间的一根棒最为辅助。 问题分析 从上至下,我将盘一次标号为1、2、3…… 当只有一个盘的时候,只需要将其从A棒移动至C棒; 步骤: 1号:A ——&gt; C 当有两个盘时,需要先将第一个盘移动至B棒,再将第二个盘移动至C棒,再将第一个盘移动至C棒; 步骤: 1号:A ——&gt; B 2号:A ——&gt; C 1号:B ——&gt; C 当有3个盘子时,需要进行的步骤为: 1号:A ——&gt; C 2号:A ——&gt; B 1号:C ——&gt; B 3号:A ——&gt; C 1号:B ——&gt; A 2号:B ——&gt; C 1号:A ——&gt; C 可以看出，当号数与盘子总数相等时,进行的操作只有A ——&gt; C。所以可以将把A棒上的所有盘子借助B棒移动到C棒的整个过程总结为三步： 将A棒上的n-1个圆盘借助C棒移动到B棒上 将A棒上的一个圆盘移动到C棒上 将B棒上的圆盘借助A棒移动到C棒上 当然，当只有一个盘子时只需A ——&gt; C;两个盘子的时候，也不需要中介。 初态:移动n-1个圆盘:移动剩下的一个盘:移动B棒上的盘: 示例代码12345678910111213141516171819202122232425262728293031323334package com.yuanyang.example;import java.util.Scanner;public class Hanoi &#123; static long count; //移动的次数 /** * @param n 盘子总数 * @param a A棒 * @param b B棒 * @param c C棒 * @param disk 用来输出移动的第k个盘子 */ static void move(int n,char a,char b,char c,int disk)&#123;//A棒借助B棒移动到C棒 disk --; if (n==1) &#123;//当只有一个盘子的时候,直接从A棒移动至C棒 System.out.printf(&quot;第%d次移动:\\t第%d个盘子,圆盘从%c移动到%c棒\\n&quot;,++count,disk,a,c); &#125;else &#123;//当盘子大于一的时候。 move(n-1,a,c,b,disk);//将A棒上的n-1个盘子借助C棒移动到B棒 System.out.printf(&quot;第%d次移动:\\t第%d个盘子,圆盘从%c移动到%c棒\\n&quot;,++count,disk,a,c);//将最后一张盘子从A棒移到C棒 move(n-1,b,a,c,disk);//将B棒上剩下的n-1个盘子借助A棒移动到C棒 &#125; &#125; public static void main(String[] args) &#123; Scanner input = new Scanner(System.in); System.out.println(&quot;请输入圆盘数:&quot;); int n = input.nextInt(); move(n,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,n + 1); System.out.printf(&quot;一共进行了%d次移动\\n&quot;,count); &#125;&#125; 这样，我们就可以得到结果了。但是，可以发现，移动的次数n和盘子数x存在 x = 2^n-1 的关系，所以，当盘子达到64个的时候，次数达到了18446744073709551615次，这就很尴尬了，这群僧人估计搬完是没戏了。","tags":[{"name":"小小算法","slug":"小小算法","permalink":"http://yoursite.com/tags/小小算法/"},{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"百钱百鸡————Java小算法","date":"2017-03-14T06:43:00.000Z","path":"2017/03/14/百钱百鸡小算法/","text":"百钱百鸡是一个非常经典的不定方程问题，最早源于我国古代的《算经》，这是古代著名数学家张丘建首次提出的。百钱百鸡问题原文如下： 鸡翁一，值钱五，鸡母一，值钱三，鸡雏三，值钱一，百钱买白鸡，问翁、母、雏各几何？ 大致的意思是，攻击5文钱一只，母鸡3文钱1只，小鸡3只1文钱，如果用100文钱买100只鸡，那么公鸡、母鸡和小鸡各应该买多少只呢？ 分析百钱买白鸡问题中，有三个变量：公鸡数量、母鸡数量、小鸡数量，分别设为x、y、z，这三者应该满足如下关系： x+y+z=100； 5x+3y+z/3=100； 三个变量，两个方程，因此这是一个不定方程组，这导致求解的结果不唯一。 示例代码编写一段代码，用于计算m钱n鸡的问题,当m=100且n=100时,正好是百钱百鸡问题。 123456789101112131415161718192021222324package com.example;public class Code &#123; public static void main(String[] args) &#123; System.out.println(&quot;百钱百鸡问题的解为:&quot;); buyChicken(100,100); &#125; public static void buyChicken(int m,int n)&#123; for (int x = 0;x &lt;= n;x++) //公鸡数量 for (int y = 0;y &lt;= n;y++) &#123; //母鸡数量 if (x + y &lt;= n) &#123; //公鸡和母鸡只和不能超过 n int z = n - x -y; //小鸡数量, 用到第一个方程 x + y + z = n if (z%3 == 0 &amp;&amp; x*5 + y*3 + z/3 == m) &#123; //小鸡数量必须为3的倍数, 且当第二个方程成立时, 得到正确结果 System.out.println(&quot;公鸡:&quot; + x + &quot; 母鸡:&quot; + y + &quot; 小鸡:&quot; + z); &#125;else continue; //当结果不满足条件时, 继续下一次循环 &#125;else break; //当公鸡和母鸡数超过 n 时, 退出当前循环 &#125; &#125;&#125; 这样，我们运行程序可以得到解： 百钱百鸡问题的解为: 公鸡:0 母鸡:25 小鸡:75 公鸡:4 母鸡:18 小鸡:78 公鸡:8 母鸡:11 小鸡:81 公鸡:12 母鸡:4 小鸡:84 这里我采用了穷举的方法，将所有的值进行穷举，寻找方程组的解。","tags":[{"name":"小小算法","slug":"小小算法","permalink":"http://yoursite.com/tags/小小算法/"},{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"我的第一个小项目——GEEK网工作室主页","date":"2017-03-13T07:31:01.000Z","path":"2017/03/13/我的第一个小项目——GEEK网工作室主页/","text":"很快,就到了大二的寒假，大学的生活就这样过去了接近一半，之前听说大二寒假会有项目什么的,已经准好了心理准备。 但第一次着手项目，还是有点小紧张 在这之前我已经看了一些框架，也需要把框架应用起来。光是纸上谈兵是没有用的，在实际操作中，必有变数。 准备工作我们组是5个前端，一个后台。并我担任组长。看了之前学长学姐们做的主页，我们也慢慢开始琢磨我们自己网站的构造。 可是没有UI、没有产品，这对于我来说是一次历练，因为我之前没有经验，不知道整个项目流程是什么，但这也是这次项目的目的，让我们熟悉项目流程。 我们在放假后进行了两次讨论，确定我们用什么技术、做成什么样等等；我画出了所有页面的原型图，整理了网站运行流程然后分配任务。 制作网站当着手代码的时候，我发现网站的逻辑其实非常简单，因为是一个介绍性的网站，虽然有些内容需要连接数据库，但整个运行逻辑很清晰。 由于只有我一个后台，所以我必须早日完成，并把接口给他们，我用了4-5天完成整个代码的书写并完成自测。 我和长街（花名）一起完成后台了管理页面，而其他四个前端写的主页面。我估计他们用了一周左右吧，因为大家都是第一次，对交互需要摸索。 发现不足本来我为我们的项目搭建了一个github项目，方便代码共享，但只有我一个后台，我并没有太在意去用这个。而他们5个前端也没使用github，我觉得这是一个不足的地方，每次他们更新了代码都要发给我，在我这里测试，即使我为他们搭建了环境之后，当我的代码改动之后，他们的又需要更新。我作为组长，应该组织他们使用起来，不然交互的时候会非常麻烦，以后希望我们都能改进。 小小总结总的来说，我觉得还行吧。虽然我设计的后台的管理页面有点丑，毕竟我对这方面没有灵感。这次对我们6个人来说都是一次成长，虽然项目很小，并且只有我们知道，但是麻雀虽小五脏俱全。我们得到锻炼就行了，这就是目的。希望以后的项目我们要避免我们这次项目里面发现的问题，提高合作效率，做得更好！","tags":[{"name":"项目取经","slug":"项目取经","permalink":"http://yoursite.com/tags/项目取经/"}]},{"title":"Test","date":"2017-03-07T06:54:31.061Z","path":"2017/03/07/test/","text":"It’s just a test!","tags":[]}]